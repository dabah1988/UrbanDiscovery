2025-02-06 10:22:35.349 +01:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-02-06 10:22:35.371 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Create.cshtml'.
2025-02-06 10:22:35.372 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Edit.cshtml'.
2025-02-06 10:22:35.372 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Index.cshtml'.
2025-02-06 10:22:35.372 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/_ViewImports.cshtml'.
2025-02-06 10:22:35.381 +01:00 [INF] User profile is available. Using 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-02-06 10:22:35.400 +01:00 [DBG] Hosting starting
2025-02-06 10:22:35.405 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-02fbd984-dad0-44b2-a8d6-a313fd9690ca.xml'.
2025-02-06 10:22:35.406 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-91f64a9e-3790-4003-88d6-2fdb77ca8aa9.xml'.
2025-02-06 10:22:35.406 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-a8439b0b-088d-4f93-aa1c-ee26b680a10a.xml'.
2025-02-06 10:22:35.406 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-ecd64c4e-cbba-4443-803c-7ea5757f2f4d.xml'.
2025-02-06 10:22:35.409 +01:00 [DBG] Found key {02fbd984-dad0-44b2-a8d6-a313fd9690ca}.
2025-02-06 10:22:35.411 +01:00 [DBG] Found key {91f64a9e-3790-4003-88d6-2fdb77ca8aa9}.
2025-02-06 10:22:35.411 +01:00 [DBG] Found key {a8439b0b-088d-4f93-aa1c-ee26b680a10a}.
2025-02-06 10:22:35.411 +01:00 [DBG] Found key {ecd64c4e-cbba-4443-803c-7ea5757f2f4d}.
2025-02-06 10:22:35.415 +01:00 [DBG] Considering key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} with expiration date 2025-04-08 17:41:03Z as default key.
2025-02-06 10:22:35.417 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-02-06 10:22:35.418 +01:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-02-06 10:22:35.419 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-02-06 10:22:35.421 +01:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-02-06 10:22:35.422 +01:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-02-06 10:22:35.422 +01:00 [DBG] Using key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} as the default key.
2025-02-06 10:22:35.423 +01:00 [DBG] Key ring with default key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} was loaded during application startup.
2025-02-06 10:22:35.436 +01:00 [DBG] Loaded hosting startup assembly ContactsManager
2025-02-06 10:22:35.436 +01:00 [DBG] Hosting started
2025-02-06 10:22:35.472 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost/ - null null
2025-02-06 10:22:35.473 +01:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-02-06 10:22:35.476 +01:00 [DBG] The request path / does not match a supported file type
2025-02-06 10:22:35.476 +01:00 [DBG] The request path / does not match a supported file type
2025-02-06 10:22:35.486 +01:00 [DBG] 1 candidate(s) found for the request path '/'
2025-02-06 10:22:35.487 +01:00 [DBG] Endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)' with route pattern '' is valid for the request path '/'
2025-02-06 10:22:35.489 +01:00 [DBG] Request matched endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:22:35.491 +01:00 [INF] Executing endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:22:35.499 +01:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller ContactManager.controllers.HomeController (ContactsManager).
2025-02-06 10:22:35.500 +01:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-02-06 10:22:35.500 +01:00 [DBG] Execution plan of resource filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2025-02-06 10:22:35.500 +01:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter (Order: -2147483648)","Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-02-06 10:22:35.500 +01:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-02-06 10:22:35.500 +01:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2025-02-06 10:22:35.502 +01:00 [DBG] Executing controller factory for controller ContactManager.controllers.HomeController (ContactsManager)
2025-02-06 10:22:35.525 +01:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration added for 'Core:UseMemoryCache', configuration added for 'Core:EnableSensitiveDataLogging', configuration added for 'Core:EnableDetailedErrors', configuration added for 'Core:EnableThreadSafetyChecks', configuration added for 'Core:ConfigureWarnings', configuration added for 'InMemoryDatabase:DatabaseRoot', configuration added for 'InMemoryDatabase:NullabilityChecksEnabled'.
2025-02-06 10:22:35.527 +01:00 [DBG] Executed controller factory for controller ContactManager.controllers.HomeController (ContactsManager)
2025-02-06 10:22:35.741 +01:00 [DBG] Entity Framework Core 8.0.7 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.InMemory:8.0.7' with options: StoreName=DataBaseTest 
2025-02-06 10:22:35.762 +01:00 [DBG] Compiling query expression: 
'DbSet<Person>()
    .Include(p => p.Country)'
2025-02-06 10:22:35.821 +01:00 [DBG] Including navigation: 'Person.Country'.
2025-02-06 10:22:35.883 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Person>(
    queryContext, 
    InMemoryShapedQueryCompilingExpressionVisitor.Table(
        queryContext: queryContext, 
        entityType: EntityType: Person)
        .Join(
            inner: InMemoryShapedQueryCompilingExpressionVisitor.Table(
                queryContext: queryContext, 
                entityType: EntityType: Country), 
            outerKeySelector: valueBuffer => (object)(Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            innerKeySelector: valueBuffer => (object)(Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            resultSelector: (outer, inner) => new ValueBuffer(new object[]
            { 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: outer, 
                    index: 0, 
                    property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 1, 
                    property: Property: Person.Address (string) MaxLength(50)), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: outer, 
                    index: 2, 
                    property: Property: Person.CountryId (Guid) Required FK Index), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                    valueBuffer: outer, 
                    index: 3, 
                    property: Property: Person.DateOfBirth (DateTime) Required), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 4, 
                    property: Property: Person.Email (string) MaxLength(100)), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 5, 
                    property: Property: Person.Name (string) Required MaxLength(100)), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 6, 
                    property: Property: Person.PhoneNumber (string) MaxLength(20)), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: inner, 
                    index: 0, 
                    property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: inner, 
                    index: 1, 
                    property: Property: Country.CountryName (string) MaxLength(100)) 
            }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(50)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Name (string) Required MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PhoneNumber (string) MaxLength(20)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(50)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Name (string) Required MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PhoneNumber (string) MaxLength(20)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        })), 
    Func<QueryContext, ValueBuffer, Person>, 
    ContactsManager.Infrastructure.MyDbContext.ApplicationDbContext, 
    False, 
    True
)'
2025-02-06 10:22:35.899 +01:00 [DBG] Compiling query expression: 
'DbSet<Country>()'
2025-02-06 10:22:35.902 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Country>(
    queryContext, 
    InMemoryShapedQueryCompilingExpressionVisitor.Table(
        queryContext: queryContext, 
        entityType: EntityType: Country)
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        })), 
    Func<QueryContext, ValueBuffer, Country>, 
    ContactsManager.Infrastructure.MyDbContext.ApplicationDbContext, 
    False, 
    True
)'
2025-02-06 10:22:35.906 +01:00 [DBG] View lookup cache miss for view 'Index' in controller 'Home'.
2025-02-06 10:22:35.909 +01:00 [INF] Executing ViewResult, running view Index.
2025-02-06 10:22:35.911 +01:00 [DBG] The view path '/views/Home/Index.cshtml' was found in 3.4191ms.
2025-02-06 10:22:35.944 +01:00 [DBG] Found the endpoints ["ContactManager.controllers.HomeController.Create (ContactsManager)","ContactManager.controllers.HomeController.Create (ContactsManager)"] for address (action=[Create],controller=[Home])
2025-02-06 10:22:35.947 +01:00 [DBG] Successfully processed template Home/Create for ContactManager.controllers.HomeController.Create (ContactsManager) resulting in /Home/Create and 
2025-02-06 10:22:35.948 +01:00 [DBG] Link generation succeeded for endpoints ["ContactManager.controllers.HomeController.Create (ContactsManager)","ContactManager.controllers.HomeController.Create (ContactsManager)"] with result /Home/Create
2025-02-06 10:22:35.956 +01:00 [INF] Executed ViewResult - view Index executed in 50.4012ms.
2025-02-06 10:22:35.956 +01:00 [INF] Executed action ContactManager.controllers.HomeController.Index (ContactsManager) in 455.7788ms
2025-02-06 10:22:35.957 +01:00 [INF] Executed endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:22:35.960 +01:00 [DBG] 'ApplicationDbContext' disposed.
2025-02-06 10:22:35.962 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost/ - 200 null text/html; charset=utf-8 490.6092ms
2025-02-06 10:22:35.991 +01:00 [DBG] Hosting stopping
2025-02-06 10:22:35.992 +01:00 [DBG] Hosting stopped
2025-02-06 10:22:35.992 +01:00 [DBG] Hosting stopping
2025-02-06 10:22:35.992 +01:00 [DBG] Hosting stopped
2025-02-06 10:25:02.313 +01:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-02-06 10:25:02.333 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Create.cshtml'.
2025-02-06 10:25:02.333 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Edit.cshtml'.
2025-02-06 10:25:02.333 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Index.cshtml'.
2025-02-06 10:25:02.333 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/_ViewImports.cshtml'.
2025-02-06 10:25:02.342 +01:00 [INF] User profile is available. Using 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-02-06 10:25:02.358 +01:00 [DBG] Hosting starting
2025-02-06 10:25:02.362 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-02fbd984-dad0-44b2-a8d6-a313fd9690ca.xml'.
2025-02-06 10:25:02.363 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-91f64a9e-3790-4003-88d6-2fdb77ca8aa9.xml'.
2025-02-06 10:25:02.363 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-a8439b0b-088d-4f93-aa1c-ee26b680a10a.xml'.
2025-02-06 10:25:02.364 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-ecd64c4e-cbba-4443-803c-7ea5757f2f4d.xml'.
2025-02-06 10:25:02.366 +01:00 [DBG] Found key {02fbd984-dad0-44b2-a8d6-a313fd9690ca}.
2025-02-06 10:25:02.368 +01:00 [DBG] Found key {91f64a9e-3790-4003-88d6-2fdb77ca8aa9}.
2025-02-06 10:25:02.368 +01:00 [DBG] Found key {a8439b0b-088d-4f93-aa1c-ee26b680a10a}.
2025-02-06 10:25:02.368 +01:00 [DBG] Found key {ecd64c4e-cbba-4443-803c-7ea5757f2f4d}.
2025-02-06 10:25:02.371 +01:00 [DBG] Considering key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} with expiration date 2025-04-08 17:41:03Z as default key.
2025-02-06 10:25:02.373 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-02-06 10:25:02.374 +01:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-02-06 10:25:02.375 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-02-06 10:25:02.377 +01:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-02-06 10:25:02.377 +01:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-02-06 10:25:02.378 +01:00 [DBG] Using key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} as the default key.
2025-02-06 10:25:02.378 +01:00 [DBG] Key ring with default key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} was loaded during application startup.
2025-02-06 10:25:02.386 +01:00 [DBG] Loaded hosting startup assembly ContactsManager
2025-02-06 10:25:02.387 +01:00 [DBG] Hosting started
2025-02-06 10:25:02.402 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost/ - null null
2025-02-06 10:25:02.404 +01:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-02-06 10:25:02.407 +01:00 [DBG] The request path / does not match a supported file type
2025-02-06 10:25:02.407 +01:00 [DBG] The request path / does not match a supported file type
2025-02-06 10:25:02.415 +01:00 [DBG] 1 candidate(s) found for the request path '/'
2025-02-06 10:25:02.417 +01:00 [DBG] Endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)' with route pattern '' is valid for the request path '/'
2025-02-06 10:25:02.417 +01:00 [DBG] Request matched endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:25:02.419 +01:00 [INF] Executing endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:25:02.430 +01:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller ContactManager.controllers.HomeController (ContactsManager).
2025-02-06 10:25:02.431 +01:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-02-06 10:25:02.431 +01:00 [DBG] Execution plan of resource filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2025-02-06 10:25:02.431 +01:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter (Order: -2147483648)","Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-02-06 10:25:02.431 +01:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-02-06 10:25:02.431 +01:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2025-02-06 10:25:02.432 +01:00 [DBG] Executing controller factory for controller ContactManager.controllers.HomeController (ContactsManager)
2025-02-06 10:25:02.454 +01:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration added for 'Core:UseMemoryCache', configuration added for 'Core:EnableSensitiveDataLogging', configuration added for 'Core:EnableDetailedErrors', configuration added for 'Core:EnableThreadSafetyChecks', configuration added for 'Core:ConfigureWarnings', configuration added for 'InMemoryDatabase:DatabaseRoot', configuration added for 'InMemoryDatabase:NullabilityChecksEnabled'.
2025-02-06 10:25:02.455 +01:00 [DBG] Executed controller factory for controller ContactManager.controllers.HomeController (ContactsManager)
2025-02-06 10:25:02.632 +01:00 [DBG] Entity Framework Core 8.0.7 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.InMemory:8.0.7' with options: StoreName=DataBaseTest 
2025-02-06 10:25:02.644 +01:00 [DBG] Compiling query expression: 
'DbSet<Person>()
    .Include(p => p.Country)'
2025-02-06 10:25:02.678 +01:00 [DBG] Including navigation: 'Person.Country'.
2025-02-06 10:25:02.720 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Person>(
    queryContext, 
    InMemoryShapedQueryCompilingExpressionVisitor.Table(
        queryContext: queryContext, 
        entityType: EntityType: Person)
        .Join(
            inner: InMemoryShapedQueryCompilingExpressionVisitor.Table(
                queryContext: queryContext, 
                entityType: EntityType: Country), 
            outerKeySelector: valueBuffer => (object)(Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            innerKeySelector: valueBuffer => (object)(Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            resultSelector: (outer, inner) => new ValueBuffer(new object[]
            { 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: outer, 
                    index: 0, 
                    property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 1, 
                    property: Property: Person.Address (string) MaxLength(50)), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: outer, 
                    index: 2, 
                    property: Property: Person.CountryId (Guid) Required FK Index), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                    valueBuffer: outer, 
                    index: 3, 
                    property: Property: Person.DateOfBirth (DateTime) Required), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 4, 
                    property: Property: Person.Email (string) MaxLength(100)), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 5, 
                    property: Property: Person.Name (string) Required MaxLength(100)), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 6, 
                    property: Property: Person.PhoneNumber (string) MaxLength(20)), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: inner, 
                    index: 0, 
                    property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: inner, 
                    index: 1, 
                    property: Property: Country.CountryName (string) MaxLength(100)) 
            }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(50)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Name (string) Required MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PhoneNumber (string) MaxLength(20)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(50)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Name (string) Required MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PhoneNumber (string) MaxLength(20)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        })), 
    Func<QueryContext, ValueBuffer, Person>, 
    ContactsManager.Infrastructure.MyDbContext.ApplicationDbContext, 
    False, 
    True
)'
2025-02-06 10:25:02.730 +01:00 [DBG] Compiling query expression: 
'DbSet<Country>()'
2025-02-06 10:25:02.732 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Country>(
    queryContext, 
    InMemoryShapedQueryCompilingExpressionVisitor.Table(
        queryContext: queryContext, 
        entityType: EntityType: Country)
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        })), 
    Func<QueryContext, ValueBuffer, Country>, 
    ContactsManager.Infrastructure.MyDbContext.ApplicationDbContext, 
    False, 
    True
)'
2025-02-06 10:25:02.735 +01:00 [DBG] View lookup cache miss for view 'Index' in controller 'Home'.
2025-02-06 10:25:02.737 +01:00 [INF] Executing ViewResult, running view Index.
2025-02-06 10:25:02.739 +01:00 [DBG] The view path '/views/Home/Index.cshtml' was found in 2.4793ms.
2025-02-06 10:25:02.762 +01:00 [DBG] Found the endpoints ["ContactManager.controllers.HomeController.Create (ContactsManager)","ContactManager.controllers.HomeController.Create (ContactsManager)"] for address (action=[Create],controller=[Home])
2025-02-06 10:25:02.764 +01:00 [DBG] Successfully processed template Home/Create for ContactManager.controllers.HomeController.Create (ContactsManager) resulting in /Home/Create and 
2025-02-06 10:25:02.765 +01:00 [DBG] Link generation succeeded for endpoints ["ContactManager.controllers.HomeController.Create (ContactsManager)","ContactManager.controllers.HomeController.Create (ContactsManager)"] with result /Home/Create
2025-02-06 10:25:02.770 +01:00 [INF] Executed ViewResult - view Index executed in 35.4738ms.
2025-02-06 10:25:02.770 +01:00 [INF] Executed action ContactManager.controllers.HomeController.Index (ContactsManager) in 338.9088ms
2025-02-06 10:25:02.771 +01:00 [INF] Executed endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:25:02.773 +01:00 [DBG] 'ApplicationDbContext' disposed.
2025-02-06 10:25:02.774 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost/ - 200 null text/html; charset=utf-8 372.315ms
2025-02-06 10:25:02.796 +01:00 [DBG] Hosting stopping
2025-02-06 10:25:02.797 +01:00 [DBG] Hosting stopping
2025-02-06 10:25:02.797 +01:00 [DBG] Hosting stopped
2025-02-06 10:25:02.797 +01:00 [DBG] Hosting stopped
2025-02-06 10:37:00.096 +01:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-02-06 10:37:00.114 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Create.cshtml'.
2025-02-06 10:37:00.115 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Edit.cshtml'.
2025-02-06 10:37:00.115 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/Home/Index.cshtml'.
2025-02-06 10:37:00.115 +01:00 [DBG] Initializing Razor view compiler with compiled view: '/views/_ViewImports.cshtml'.
2025-02-06 10:37:00.123 +01:00 [INF] User profile is available. Using 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-02-06 10:37:00.139 +01:00 [DBG] Hosting starting
2025-02-06 10:37:00.144 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-02fbd984-dad0-44b2-a8d6-a313fd9690ca.xml'.
2025-02-06 10:37:00.145 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-91f64a9e-3790-4003-88d6-2fdb77ca8aa9.xml'.
2025-02-06 10:37:00.145 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-a8439b0b-088d-4f93-aa1c-ee26b680a10a.xml'.
2025-02-06 10:37:00.146 +01:00 [DBG] Reading data from file 'C:\Users\Hermann KIPRE\AppData\Local\ASP.NET\DataProtection-Keys\key-ecd64c4e-cbba-4443-803c-7ea5757f2f4d.xml'.
2025-02-06 10:37:00.148 +01:00 [DBG] Found key {02fbd984-dad0-44b2-a8d6-a313fd9690ca}.
2025-02-06 10:37:00.150 +01:00 [DBG] Found key {91f64a9e-3790-4003-88d6-2fdb77ca8aa9}.
2025-02-06 10:37:00.150 +01:00 [DBG] Found key {a8439b0b-088d-4f93-aa1c-ee26b680a10a}.
2025-02-06 10:37:00.150 +01:00 [DBG] Found key {ecd64c4e-cbba-4443-803c-7ea5757f2f4d}.
2025-02-06 10:37:00.153 +01:00 [DBG] Considering key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} with expiration date 2025-04-08 17:41:03Z as default key.
2025-02-06 10:37:00.155 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-02-06 10:37:00.156 +01:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-02-06 10:37:00.157 +01:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-02-06 10:37:00.158 +01:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-02-06 10:37:00.159 +01:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-02-06 10:37:00.160 +01:00 [DBG] Using key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} as the default key.
2025-02-06 10:37:00.160 +01:00 [DBG] Key ring with default key {02fbd984-dad0-44b2-a8d6-a313fd9690ca} was loaded during application startup.
2025-02-06 10:37:00.169 +01:00 [DBG] Loaded hosting startup assembly ContactsManager
2025-02-06 10:37:00.169 +01:00 [DBG] Hosting started
2025-02-06 10:37:00.187 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost/ - null null
2025-02-06 10:37:00.189 +01:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-02-06 10:37:00.191 +01:00 [DBG] The request path / does not match a supported file type
2025-02-06 10:37:00.191 +01:00 [DBG] The request path / does not match a supported file type
2025-02-06 10:37:00.201 +01:00 [DBG] 1 candidate(s) found for the request path '/'
2025-02-06 10:37:00.202 +01:00 [DBG] Endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)' with route pattern '' is valid for the request path '/'
2025-02-06 10:37:00.203 +01:00 [DBG] Request matched endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:37:00.204 +01:00 [INF] Executing endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:37:00.213 +01:00 [INF] Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller ContactManager.controllers.HomeController (ContactsManager).
2025-02-06 10:37:00.214 +01:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-02-06 10:37:00.214 +01:00 [DBG] Execution plan of resource filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2025-02-06 10:37:00.215 +01:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter (Order: -2147483648)","Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)"]
2025-02-06 10:37:00.215 +01:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-02-06 10:37:00.215 +01:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"]
2025-02-06 10:37:00.216 +01:00 [DBG] Executing controller factory for controller ContactManager.controllers.HomeController (ContactsManager)
2025-02-06 10:37:00.246 +01:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration added for 'Core:UseMemoryCache', configuration added for 'Core:EnableSensitiveDataLogging', configuration added for 'Core:EnableDetailedErrors', configuration added for 'Core:EnableThreadSafetyChecks', configuration added for 'Core:ConfigureWarnings', configuration added for 'InMemoryDatabase:DatabaseRoot', configuration added for 'InMemoryDatabase:NullabilityChecksEnabled'.
2025-02-06 10:37:00.249 +01:00 [DBG] Executed controller factory for controller ContactManager.controllers.HomeController (ContactsManager)
2025-02-06 10:37:00.460 +01:00 [DBG] Entity Framework Core 8.0.7 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.InMemory:8.0.7' with options: StoreName=DataBaseTest 
2025-02-06 10:37:00.473 +01:00 [DBG] Compiling query expression: 
'DbSet<Person>()
    .Include(p => p.Country)'
2025-02-06 10:37:00.508 +01:00 [DBG] Including navigation: 'Person.Country'.
2025-02-06 10:37:00.552 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Person>(
    queryContext, 
    InMemoryShapedQueryCompilingExpressionVisitor.Table(
        queryContext: queryContext, 
        entityType: EntityType: Person)
        .Join(
            inner: InMemoryShapedQueryCompilingExpressionVisitor.Table(
                queryContext: queryContext, 
                entityType: EntityType: Country), 
            outerKeySelector: valueBuffer => (object)(Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            innerKeySelector: valueBuffer => (object)(Guid?)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            resultSelector: (outer, inner) => new ValueBuffer(new object[]
            { 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: outer, 
                    index: 0, 
                    property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 1, 
                    property: Property: Person.Address (string) MaxLength(50)), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: outer, 
                    index: 2, 
                    property: Property: Person.CountryId (Guid) Required FK Index), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                    valueBuffer: outer, 
                    index: 3, 
                    property: Property: Person.DateOfBirth (DateTime) Required), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 4, 
                    property: Property: Person.Email (string) MaxLength(100)), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 5, 
                    property: Property: Person.Name (string) Required MaxLength(100)), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: outer, 
                    index: 6, 
                    property: Property: Person.PhoneNumber (string) MaxLength(20)), 
                (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                    valueBuffer: inner, 
                    index: 0, 
                    property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
                ExpressionExtensions.ValueBufferTryReadValue<string>(
                    valueBuffer: inner, 
                    index: 1, 
                    property: Property: Country.CountryName (string) MaxLength(100)) 
            }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(50)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Name (string) Required MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PhoneNumber (string) MaxLength(20)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        }))
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Person.Id (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Person.Address (string) MaxLength(50)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 2, 
                property: Property: Person.CountryId (Guid) Required FK Index), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<DateTime>(
                valueBuffer: valueBuffer, 
                index: 3, 
                property: Property: Person.DateOfBirth (DateTime) Required), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 4, 
                property: Property: Person.Email (string) MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 5, 
                property: Property: Person.Name (string) Required MaxLength(100)), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 6, 
                property: Property: Person.PhoneNumber (string) MaxLength(20)), 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 7, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 8, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        })), 
    Func<QueryContext, ValueBuffer, Person>, 
    ContactsManager.Infrastructure.MyDbContext.ApplicationDbContext, 
    False, 
    True
)'
2025-02-06 10:37:00.564 +01:00 [DBG] Compiling query expression: 
'DbSet<Country>()'
2025-02-06 10:37:00.568 +01:00 [DBG] Generated query execution expression: 
'queryContext => new QueryingEnumerable<Country>(
    queryContext, 
    InMemoryShapedQueryCompilingExpressionVisitor.Table(
        queryContext: queryContext, 
        entityType: EntityType: Country)
        .Select(valueBuffer => new ValueBuffer(new object[]
        { 
            (object)ExpressionExtensions.ValueBufferTryReadValue<Guid>(
                valueBuffer: valueBuffer, 
                index: 0, 
                property: Property: Country.CountryId (Guid) Required PK AfterSave:Throw ValueGenerated.OnAdd), 
            ExpressionExtensions.ValueBufferTryReadValue<string>(
                valueBuffer: valueBuffer, 
                index: 1, 
                property: Property: Country.CountryName (string) MaxLength(100)) 
        })), 
    Func<QueryContext, ValueBuffer, Country>, 
    ContactsManager.Infrastructure.MyDbContext.ApplicationDbContext, 
    False, 
    True
)'
2025-02-06 10:37:00.572 +01:00 [DBG] View lookup cache miss for view 'Index' in controller 'Home'.
2025-02-06 10:37:00.575 +01:00 [INF] Executing ViewResult, running view Index.
2025-02-06 10:37:00.577 +01:00 [DBG] The view path '/views/Home/Index.cshtml' was found in 3.9613ms.
2025-02-06 10:37:00.602 +01:00 [DBG] Found the endpoints ["ContactManager.controllers.HomeController.Create (ContactsManager)","ContactManager.controllers.HomeController.Create (ContactsManager)"] for address (action=[Create],controller=[Home])
2025-02-06 10:37:00.603 +01:00 [DBG] Successfully processed template Home/Create for ContactManager.controllers.HomeController.Create (ContactsManager) resulting in /Home/Create and 
2025-02-06 10:37:00.604 +01:00 [DBG] Link generation succeeded for endpoints ["ContactManager.controllers.HomeController.Create (ContactsManager)","ContactManager.controllers.HomeController.Create (ContactsManager)"] with result /Home/Create
2025-02-06 10:37:00.609 +01:00 [INF] Executed ViewResult - view Index executed in 38.3795ms.
2025-02-06 10:37:00.610 +01:00 [INF] Executed action ContactManager.controllers.HomeController.Index (ContactsManager) in 394.7782ms
2025-02-06 10:37:00.610 +01:00 [INF] Executed endpoint 'ContactManager.controllers.HomeController.Index (ContactsManager)'
2025-02-06 10:37:00.613 +01:00 [DBG] 'ApplicationDbContext' disposed.
2025-02-06 10:37:00.614 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost/ - 200 null text/html; charset=utf-8 427.4184ms
2025-02-06 10:37:00.638 +01:00 [DBG] Hosting stopping
2025-02-06 10:37:00.638 +01:00 [DBG] Hosting stopping
2025-02-06 10:37:00.638 +01:00 [DBG] Hosting stopped
2025-02-06 10:37:00.638 +01:00 [DBG] Hosting stopped
